apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-service
  labels:
    app.kubernetes.io/name: worker-service
    app.kubernetes.io/part-of: getupnet
    getupnet.io/trusted: "true"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: worker-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: worker-service
        app.kubernetes.io/part-of: getupnet
        getupnet.io/trusted: "true"
    spec:
      serviceAccountName: worker-service
      containers:
        - name: worker
          image: 123456789012.dkr.ecr.us-east-1.amazonaws.com/getupnet/worker-service:latest
          imagePullPolicy: IfNotPresent
          command: ["dramatiq", "app.shared.worker:broker", "--processes", "2", "--threads", "4"]
          env:
            - name: SERVICE_NAME
              value: worker-service
            - name: DRAMATIQ_BROKER
              value: redis://elasticache.getupnet:6379/0
          envFrom:
            - configMapRef:
                name: getupnet-common
            - secretRef:
                name: getupnet-secrets
          resources:
            requests:
              cpu: 300m
              memory: 512Mi
            limits:
              cpu: 800m
              memory: 1024Mi
          readinessProbe:
            exec:
              command: ["/bin/sh", "-c", "dramatiqctl ping redis://elasticache.getupnet:6379/0"]
            initialDelaySeconds: 15
            periodSeconds: 20
          livenessProbe:
            exec:
              command: ["/bin/sh", "-c", "dramatiqctl ping redis://elasticache.getupnet:6379/0"]
            initialDelaySeconds: 30
            periodSeconds: 60
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
      nodeSelector:
        getupnet.io/workload: worker
